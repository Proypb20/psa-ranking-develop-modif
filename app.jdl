application {
  config {
    databaseType sql
    devDatabaseType h2Disk
    enableHibernateCache true
    enableSwaggerCodegen true
    enableTranslation true
    jhiPrefix jhi
    languages [en, pt-br, es]
    messageBroker false
    nativeLanguage es
    packageName com.ar.pbpoints
    packageFolder com/ar/pbpoints
    prodDatabaseType mysql
    searchEngine false
    serviceDiscoveryType false
    skipClient false
    skipServer false
    testFrameworks [gatling]
    websocket false
    applicationType monolith
    gitCompany 
    baseName PbPoints
    serverPort 8080
    authenticationType jwt
    uaaBaseName ../uaa
    cacheProvider ehcache
    buildTool maven
    useSass true
    clientPackageManager npm
    clientFramework angularX
    jhipsterVersion 6.4.1
    jwtSecretKey ZmJjYWY3MzE1ODM1MjY4NmM1Nzg1ZjFiYzU3MjczMmE5YTVmN2ZiMjg3Y2ZiOGU2NTkxOTIwNWU3NDk0ZDkzM2YyMmJhNzZmNWE5MzkxMzE5NDkyMWIzNjM0YmViMDk2ZDBiY2E5MmE4NjIwMmRmMDM0M2U4Yzc4N2RjM2U3MjM=
    embeddableLaunchScript false
    clientTheme none
    entitySuffix 
    dtoSuffix DTO
    otherModules 
    blueprints 
    skipUserManagement false
  }

  entities Bracket, Category, City, Country, DocType, Event, EventCategory, Format, Game, Location, Player, PlayerDetailPoint, PlayerDetailPoints, PlayerPoint, PlayerPoints, Province, Roster, Team, TeamDetailPoint, TeamPoint, TeamPoints, Tournament, UserExtra
}

entity Bracket {
  teams Integer required unique,
  teams5A Integer required,
  teams5B Integer required,
  teams6A Integer required,
  teams6B Integer required
}
entity Category {
  name String,
  description String,
  gameTimeType TimeType required,
  gameTime Integer required,
  stopTimeType TimeType required,
  stopTime Integer required,
  totalPoints Integer required,
  difPoints Integer required,
  order Integer required
}
/**
 * City entity.\n@author Marcelo Miño\nDatos traidos desde https:
 */
entity City {
  name String,
  latitude String,
  longitude String
}
/**
 * Country entity.\n@author Marcelo Miño
 */
entity Country {
  name String
}
/**
 * Address entity.\n@author The JHipster team.
 */
entity DocType {
  name String,
  description String
}
/**
 * Event entity.\n@author Marcelo Miño
 */
entity Event {
  name String,
  fromDate LocalDate,
  endDate LocalDate,
  endInscriptionDate LocalDate,
  status Status,
  createDate Instant,
  updatedDate Instant
}
entity EventCategory {
  splitDeck Boolean
}
entity Format {
  name String required,
  description String,
  coeficient Float required,
  playersQty Integer
}
entity Game {
  pointsA Integer,
  pointsB Integer,
  splitDeckNum Integer,
  timeLeft Integer,
  status Status required,
  overtimeA Integer,
  overtimeB Integer,
  uvuA Integer,
  uvuB Integer,
  group Integer,
  clasif String
}
/**
 * Location entity.\n@author Marcelo Miño\nDatos traidos desde https:
 */
entity Location {
  name String
}
entity Player {
  profile ProfileUser
}
entity PlayerDetailPoint {
  points Float required
}
entity PlayerDetailPoints {
  points Float required
}
entity PlayerPoint {
  points Float required
}
entity PlayerPoints {
  points Float required
}
/**
 * Province entity.\n@author Marcelo Miño\nDatos traidos desde https:
 */
entity Province {
  name String
}
/**
 * Roster entity.\n@author Marcelo Miño
 */
entity Roster {
  active Boolean
}
/**
 * Team entity.\n@author Marcelo Miño
 */
entity Team {
  name String,
  active Boolean
}
entity TeamDetailPoint {
  points Float required
}
entity TeamPoint {
  points Float required
}
entity TeamPoints {
  points Float required
}
/**
 * Tournament entity.\n@author Marcelo Miño
 */
entity Tournament {
  name String,
  closeInscrDays Integer,
  status Status,
  categorize Boolean,
  logo ImageBlob,
  cantPlayersNextCategory Integer,
  qtyTeamGroups Integer
}
/**
 * UserExtra entity.\n@author Marcelo Miño
 */
entity UserExtra {
  numDoc String,
  phone String,
  bornDate LocalDate,
  picture ImageBlob required
}
enum TimeType {
  MINUTES,
  SECONDS
}
enum Status {
  CREATED,
  PENDING,
  IN_PROGRESS,
  DONE,
  CANCEL
}
enum ProfileUser {
  PLAYER,
  STAFF
}

relationship OneToOne {
  UserExtra{user(login) required} to User with jpaDerivedIdentifier
}
relationship OneToMany {
  Province{city} to City{province},
  Tournament{event} to Event{tournament},
  EventCategory{game} to Game{eventCategory required},
  Roster{player} to Player{roster required},
  Country{province} to Province{country},
  EventCategory{roster} to Roster{eventCategory required}
}
relationship ManyToOne {
  Category{tournament(name) required} to Tournament,
  Event{city} to City,
  EventCategory{event(name) required} to Event,
  EventCategory{category(name) required} to Category,
  EventCategory{format(name) required} to Format,
  Format{tournament(name) required} to Tournament,
  Game{teamA(name) required} to Team,
  Game{teamB(name) required} to Team,
  Location{province} to Province,
  Player{user(login)} to User,
  PlayerDetailPoint{event(name) required} to Event,
  PlayerDetailPoint{playerPoint required} to PlayerPoint,
  PlayerDetailPoints{playerPoints required} to PlayerPoints,
  PlayerDetailPoints{event(name) required} to Event,
  PlayerPoint{tournament(name) required} to Tournament,
  PlayerPoint{user(login) required} to User,
  PlayerPoint{category(name)} to Category,
  PlayerPoints{user(login) required} to User,
  PlayerPoints{tournament(name) required} to Tournament,
  Roster{team(name) required} to Team,
  Team{owner(login)} to User,
  TeamDetailPoint{teamPoint required} to TeamPoint,
  TeamDetailPoint{event(name) required} to Event,
  TeamPoint{team(name) required} to Team,
  TeamPoint{tournament(name) required} to Tournament,
  TeamPoints{team(name) required} to Team,
  TeamPoints{tournament(name) required} to Tournament,
  Tournament{owner(login) required} to User,
  UserExtra{docType} to DocType
}

dto Category, City, Country, DocType, Event, EventCategory, Format, Game, Location, Player, PlayerDetailPoint, PlayerDetailPoints, PlayerPoint, PlayerPoints, Province, Roster, Team, TeamDetailPoint, TeamPoint, TeamPoints, Tournament, UserExtra with mapstruct
paginate Category, EventCategory, Game, Location, Player, PlayerDetailPoint, PlayerDetailPoints, PlayerPoint, PlayerPoints, Roster, Team, TeamDetailPoint, TeamPoint, TeamPoints, UserExtra with pagination
paginate City, Country, DocType, Event, Format, Province, Tournament with infinite-scroll
service Category, City, Country, DocType, Event, EventCategory, Game, Location, Player, Province, Roster, Team, Tournament, UserExtra with serviceClass
service Format, PlayerDetailPoint, PlayerDetailPoints, PlayerPoint, PlayerPoints, TeamDetailPoint, TeamPoint, TeamPoints with serviceImpl
filter Category, City, Event, EventCategory, Format, Game, Player, PlayerDetailPoint, PlayerDetailPoints, PlayerPoint, PlayerPoints, Province, Roster, Team, TeamDetailPoint, TeamPoint, TeamPoints, Tournament
